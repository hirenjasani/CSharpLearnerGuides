# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore all projects/solutions
      id: restore
      shell: pwsh
      run: |
        $errors = @()
        Get-ChildItem -Recurse -Include *.sln, *.csproj | ForEach-Object {
          Write-Host "üîÑ Restoring $($_.FullName)"
          dotnet restore $_.FullName
          if ($LASTEXITCODE -ne 0) { $errors += "Restore failed: $($_.FullName)" }
        }
        if ($errors.Count -gt 0) {
          Write-Host "‚ö†Ô∏è Some restores failed:`n$($errors -join "`n")"
          echo "restore_failed=true" >> $env:GITHUB_ENV
        }

    - name: Build all projects/solutions
      id: build
      shell: pwsh
      run: |
        $errors = @()
        Get-ChildItem -Recurse -Include *.sln, *.csproj | ForEach-Object {
          Write-Host "üèóÔ∏è Building $($_.FullName)"
          dotnet build $_.FullName --no-restore
          if ($LASTEXITCODE -ne 0) { $errors += "Build failed: $($_.FullName)" }
        }
        if ($errors.Count -gt 0) {
          Write-Host "‚ö†Ô∏è Some builds failed:`n$($errors -join "`n")"
          echo "build_failed=true" >> $env:GITHUB_ENV
        }

    - name: Test all projects/solutions
      id: test
      shell: pwsh
      run: |
        $errors = @()
        Get-ChildItem -Recurse -Include *.sln, *.csproj | ForEach-Object {
          Write-Host "üß™ Testing $($_.FullName)"
          dotnet test $_.FullName --no-build --verbosity normal
          if ($LASTEXITCODE -ne 0) { $errors += "Test failed: $($_.FullName)" }
        }
        if ($errors.Count -gt 0) {
          Write-Host "‚ö†Ô∏è Some tests failed:`n$($errors -join "`n")"
          echo "test_failed=true" >> $env:GITHUB_ENV
        }

    - name: Fail job if any step failed
      if: always()
      shell: pwsh
      run: |
        if ($env:restore_failed -eq "true" -or $env:build_failed -eq "true" -or $env:test_failed -eq "true") {
          Write-Error "‚ùå One or more projects failed. See logs above."
          exit 1
        } else {
          Write-Host "‚úÖ All restores, builds, and tests passed."
        }